import os
import re
import glob
import warnings
import pandas as pd

from snakemake.utils import min_version

# Turn off performance warnings
warnings.simplefilter(action='ignore', category=pd.errors.PerformanceWarning)

# Set min version for Snakemake
min_version("7.2.1")

# Read in config
configfile: "config/config.yaml"
configfile: "config/analysis.yaml"
configfile: "config/gsea.yaml"

# When using --use-conda --use-singularity, this sets the OS used
container: "docker://continuumio/miniconda3"

# Paths
datadir = config['datadir']
deliverdir = config['deliverdir']

# Configuration variables
reference_path = config['reference_path']
reference_args = config['reference_args']
gsea_sets = config['gsea_sets']

# Load fastq files
files = (
    pd.read_csv(config['fastqs'], sep='\t', dtype='object')
    .set_index(["sample", "pair"])
    .sort_index())

# Sample and pairs names
samples = list(files.index.levels[0])
pairs = list(files.index.levels[1])

# Ensure all samples are paired
sample_pairs = (
        files.reset_index()
        .groupby('sample')
        .pair.unique())

if not all([len(v) == 2 for v in sample_pairs]):
    raise ValueError("Workflow only supports paired-end samples")

# Paths
star_index = reference_path + "/{species}/{release}-{build}/star-index".format(**reference_args)

# More paths
fastpdir   = f"{datadir}/d00_fastp"
stardir    = f"{datadir}/d01_star"
rseqcdir   = f"{datadir}/d02_rseqc"
multiqcdir = f"{datadir}/d03_multiqc"
deseqdir   = f"{datadir}/d04_deseq"
gseadir    = f"{datadir}/d05_gsea"


# Set constraints for wildcards
wildcard_constraints:
    sample  = "|".join(samples),
    pair    = "|".join(pairs)

# Rules
include: "rules/reference.smk"
include: "rules/fastp.smk"
include: "rules/star.smk"
include: "rules/rseqc.smk"
include: "rules/multiqc.smk"
include: "rules/deseq.smk"
include: "rules/gsea.smk"
include: "rules/delivery.smk"

# Main target
rule all:
    input:
        rules.run_multiqc.input,
        rules.run_gsea.input

